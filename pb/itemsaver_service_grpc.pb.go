// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: itemsaver_service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ItemSaverServiceClient is the client API for ItemSaverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ItemSaverServiceClient interface {
	Save(ctx context.Context, in *ItemSaverRequest, opts ...grpc.CallOption) (*ItemSaverResponse, error)
}

type itemSaverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewItemSaverServiceClient(cc grpc.ClientConnInterface) ItemSaverServiceClient {
	return &itemSaverServiceClient{cc}
}

func (c *itemSaverServiceClient) Save(ctx context.Context, in *ItemSaverRequest, opts ...grpc.CallOption) (*ItemSaverResponse, error) {
	out := new(ItemSaverResponse)
	err := c.cc.Invoke(ctx, "/crawler.distributed.itemsaver.ItemSaverService/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItemSaverServiceServer is the server API for ItemSaverService service.
// All implementations must embed UnimplementedItemSaverServiceServer
// for forward compatibility
type ItemSaverServiceServer interface {
	Save(context.Context, *ItemSaverRequest) (*ItemSaverResponse, error)
	mustEmbedUnimplementedItemSaverServiceServer()
}

// UnimplementedItemSaverServiceServer must be embedded to have forward compatible implementations.
type UnimplementedItemSaverServiceServer struct {
}

func (UnimplementedItemSaverServiceServer) Save(context.Context, *ItemSaverRequest) (*ItemSaverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (UnimplementedItemSaverServiceServer) mustEmbedUnimplementedItemSaverServiceServer() {}

// UnsafeItemSaverServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ItemSaverServiceServer will
// result in compilation errors.
type UnsafeItemSaverServiceServer interface {
	mustEmbedUnimplementedItemSaverServiceServer()
}

func RegisterItemSaverServiceServer(s grpc.ServiceRegistrar, srv ItemSaverServiceServer) {
	s.RegisterService(&ItemSaverService_ServiceDesc, srv)
}

func _ItemSaverService_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemSaverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSaverServiceServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crawler.distributed.itemsaver.ItemSaverService/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSaverServiceServer).Save(ctx, req.(*ItemSaverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ItemSaverService_ServiceDesc is the grpc.ServiceDesc for ItemSaverService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ItemSaverService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "crawler.distributed.itemsaver.ItemSaverService",
	HandlerType: (*ItemSaverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _ItemSaverService_Save_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "itemsaver_service.proto",
}
